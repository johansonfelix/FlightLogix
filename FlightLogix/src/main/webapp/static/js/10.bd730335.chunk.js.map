{"version":3,"sources":["Pages/Registration.js","Pages/Login.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","registerUser","User","a","sendRequest","JSON","stringify","then","response","json","responseJson","catch","err","console","error","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","SignUp","props","classes","useState","firstName","setFirstName","lastName","setLastname","email","setEmail","password","setPassword","isRegistering","setIsRegistering","isRegistered","setIsRegistered","setError","handleRegister","e","preventDefault","log","Container","maxWidth","fixed","disableGutters","className","CircularProgress","CssBaseline","Avatar","component","style","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","target","value","type","FormControlLabel","control","Checkbox","Button","justify","onClick","closeHandler","Box","mt","handleIsRegistered","loginUser","Credentials","Fade","React","forwardRef","ref","open","in","children","onEnter","onExited","other","useSpring","from","opacity","to","onStart","onRest","div","modal","justifyContent","modalPaper","palette","background","boxShadow","shadows","padding","textField","Alert","elevation","SignIn","isAuthenticating","setIsAuthenticating","setOpen","snackBarOpen","setSnackBarOpen","handleClose","handleSnackBarClose","event","reason","handleSubmit","setToken","token","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Snackbar","autoHideDuration","severity"],"mappings":"mZAiBA,SAASA,IACL,OACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACK,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,QAA3B,yBAEE,KACD,IAAIC,MAAOC,cACX,O,SAQEC,E,8EAAf,WAA4BC,GAA5B,SAAAC,EAAA,+EAEWC,YAAY,OAAQ,gBAAiB,KAAMC,KAAKC,UAAUJ,IAC5DK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAUH,OAAOA,KAKVC,OAAM,SAAAC,GACHC,QAAQC,MAAM,8BAAgCF,OApB1D,4C,sBAyBA,IAAMG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiB,WAErBC,KAAM,CACFC,MAAO,OACPT,UAAWF,EAAMG,QAAQ,IAE7BS,OAAQ,CACJJ,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAASU,EAAOC,GAC3B,IAAMC,EAAUjB,IADkB,EAEAkB,qBAFA,mBAE3BC,EAF2B,KAEhBC,EAFgB,OAGFF,qBAHE,mBAG3BG,EAH2B,KAGjBC,EAHiB,OAIRJ,qBAJQ,mBAI3BK,EAJ2B,KAIpBC,EAJoB,OAKFN,qBALE,mBAK3BO,EAL2B,KAKjBC,EALiB,OAMQR,oBAAS,GANjB,mBAM3BS,EAN2B,KAMZC,EANY,OAOMV,oBAAS,GAPf,mBAO3BW,EAP2B,KAObC,EAPa,OAQRZ,mBAAS,MARD,mBAQ3BnB,EAR2B,KAQpBgC,EARoB,KAW5BC,EAAc,uCAAG,WAAMC,GAAN,eAAA7C,EAAA,6DACnB6C,EAAEC,iBACFN,GAAiB,GACjBG,EAAS,MAHU,SAII7C,EAAa,CAChCiC,YACAE,WACAE,QACAE,aARe,OAIbhC,EAJa,OAYnBmC,GAAiB,GAEZnC,EAIIA,EAAQ,SACbK,QAAQqC,IAAI1C,EAAQ,SACpBsC,EAAStC,EAAQ,UAGA,YAAbA,GACJK,QAAQqC,IAAI,4BACZL,GAAgB,KAIhBhC,QAAQqC,IAAI1C,GACZK,QAAQqC,IAAI1C,EAAQ,OACpBsC,EAAStC,EAAQ,SAhBjBK,QAAQqC,IAAI,sBACZJ,EAAS,yCAkBTP,IACAJ,IACAE,IACAI,IArCe,4CAAH,sDA6CpB,OAEI,cAAC,WAAD,UAEI,eAACU,EAAA,EAAD,CAAWC,SAAS,KAAKC,OAAK,EAACC,gBAAgB,EAA/C,UAEQZ,GAAiB,sBAAKa,UAAWvB,EAAQd,MAAxB,UACb,cAACsC,EAAA,EAAD,IACA,qDAKNd,GACE,gCACI,cAACe,EAAA,EAAD,IACA,sBAAKF,UAAWvB,EAAQd,MAAxB,UACI,cAACwC,EAAA,EAAD,CAAQH,UAAWvB,EAAQR,OAA3B,SACI,cAAC,IAAD,MAEJ,cAAC/B,EAAA,EAAD,CAAYkE,UAAU,KAAKjE,QAAQ,KAAnC,qBAGnBoB,GAAS,eAACrB,EAAA,EAAD,CAAYkE,UAAU,QAAQC,MAAO,CAAEjE,MAAO,OAASD,QAAQ,QAA/D,UAAuE,uBAAOoB,KAEpE,uBAAMyC,UAAWvB,EAAQL,KAAMkC,SAAUd,EAAzC,UACI,eAACe,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAzB,UACI,cAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACC,EAAA,EAAD,CACIC,aAAa,QACbC,KAAK,YACL3E,QAAQ,WACR4E,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,aACNC,WAAS,EACTC,SAAU,SAAA3B,GAAC,OAAIb,EAAaa,EAAE4B,OAAOC,YAG7C,cAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACC,EAAA,EAAD,CACIzE,QAAQ,WACR4E,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNJ,KAAK,WACLD,aAAa,QACbO,SAAU,SAAA3B,GAAC,OAAIX,EAAYW,EAAE4B,OAAOC,YAG5C,cAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACE,EAAA,EAAD,CACIzE,QAAQ,WACR4E,UAAQ,EACRC,WAAS,EACTO,KAAK,QACLN,GAAG,QACHC,MAAM,gBACNJ,KAAK,QACLD,aAAa,QACbO,SAAU,SAAA3B,GAAC,OAAIT,EAASS,EAAE4B,OAAOC,YAGzC,cAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACE,EAAA,EAAD,CACIzE,QAAQ,WACR4E,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLI,MAAM,WACNK,KAAK,WACLN,GAAG,WACHJ,aAAa,mBACbO,SAAU,SAAA3B,GAAC,OAAIP,EAAYO,EAAE4B,OAAOC,YAG5C,cAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACc,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAUJ,MAAM,mBAAmBlF,MAAM,YAClD8E,MAAM,oFAIlB,cAACS,EAAA,EAAD,CACIJ,KAAK,SACLP,WAAS,EACT7E,QAAQ,YACRC,MAAM,UACN4D,UAAWvB,EAAQH,OACnB+B,MAAO,CAAClC,gBAAgB,WAN5B,qBAUA,cAACoC,EAAA,EAAD,CAAMC,WAAS,EAACoB,QAAQ,WAAxB,SACI,cAACrB,EAAA,EAAD,CAAME,MAAI,EAAV,SACI,cAACnE,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAQ0F,QAASrD,EAAMsD,aAA9C,wDAOhB,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC/F,EAAD,SAKXoD,GAAgBb,EAAMyD,mBAAmB,gB,+BCxN3CC,E,8EAAf,WAAyBC,GAAzB,SAAAvF,EAAA,+EAEWC,YAAY,OAAQ,aAAc,KAAMC,KAAKC,UAAUoF,IACzDnF,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAUH,OAAOA,KAKVC,OAAM,SAAAC,GACHC,QAAQC,MAAM,4BAA8BF,OApBxD,4C,sBAwBA,IAAM+E,EAAOC,IAAMC,YAAW,SAAc9D,EAAO+D,GAAM,IACzCC,EAAgDhE,EAApDiE,GAAUC,EAA0ClE,EAA1CkE,SAAUC,EAAgCnE,EAAhCmE,QAASC,EAAuBpE,EAAvBoE,SAAaC,EADE,YACQrE,EADR,wCAE9C6B,EAAQyC,oBAAU,CACpBC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAASR,EAAO,EAAI,GAC1BU,QAAS,WACDV,GAAQG,GACRA,KAGRQ,OAAQ,YACCX,GAAQI,GACTA,OAOZ,OACI,cAAC,WAASQ,IAAV,yBAAcb,IAAKA,EAAKlC,MAAOA,GAAWwC,GAA1C,aACKH,QAYb,SAASzG,IACL,OACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACK,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAA3B,yBAEE,KACD,IAAIC,MAAOC,cACX,OAKb,IAAMe,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAgB,WAEpBC,KAAM,CACFC,MAAO,OACPT,UAAWF,EAAMG,QAAQ,IAE7BS,OAAQ,CACJJ,OAAQR,EAAMG,QAAQ,EAAG,EAAG,IAEhCwF,MAAO,CACHvF,QAAS,OACTE,WAAY,SACZsF,eAAgB,UAEpBC,WAAY,CACRzF,QAAS,OACTK,gBAAiBT,EAAM8F,QAAQC,WAAW9F,MAC1C+F,UAAWhG,EAAMiG,QAAQ,GACzBC,QAASlG,EAAMG,QAAQ,EAAG,EAAG,GAC7BG,WAAY,SACZsF,eAAgB,UAGpBO,UAAU,CACN,UAAU,CACN1F,gBAAiB,YAU7B,SAAS2F,EAAMtF,GACX,OAAO,cAAC,IAAD,aAAUuF,UAAW,EAAG5H,QAAQ,UAAaqC,IAIzC,SAASwF,EAAOxF,GAC3B,IAAMC,EAAUjB,IADkB,EAGRkB,qBAHQ,mBAG3BK,EAH2B,KAGpBC,EAHoB,OAIFN,qBAJE,mBAI3BO,EAJ2B,KAIjBC,EAJiB,OAKcR,oBAAS,GALvB,mBAK3BuF,EAL2B,KAKTC,EALS,OAMRxF,mBAAS,MAND,mBAM3BnB,EAN2B,KAMpBgC,EANoB,OAOVb,oBAAS,GAPC,mBAO3B8D,EAP2B,KAOrB2B,EAPqB,OAQMzF,oBAAS,GARf,mBAQ3B0F,EAR2B,KAQbC,EARa,KAgB5BC,EAAc,WAChBH,GAAQ,IAGNI,GAAsB,SAACC,EAAOC,GACjB,cAAXA,GAIFJ,GAAgB,IAYZK,GAAY,uCAAG,WAAMjF,GAAN,eAAA7C,EAAA,6DACjBU,QAAQqC,IAAI,kBACZF,EAAEC,iBAEFwE,GAAoB,GACpB3E,EAAS,MALQ,SAMM2C,EAAU,CAC7BnD,QACAE,WACAiF,wBATa,QAMXjH,EANW,QAgBRA,EAAQ,SACbK,QAAQqC,IAAI1C,EAAQ,SACpBsC,EAAStC,EAAQ,UAEZA,EAAQ,QACbK,QAAQqC,IAAI1C,GACZuB,EAAMmG,SAAS1H,EAAS2H,SATxBtH,QAAQqC,IAAI,sBACZJ,EAAS,yCAWb2E,GAAoB,GAzBH,2CAAH,sDAqClB,OAEQ,eAAC,WAAD,WACI,eAACtE,EAAA,EAAD,CAAWQ,UAAU,OAAOP,SAAS,KAArC,UACI,cAACK,EAAA,EAAD,KAEE+D,GACE,sBAAKjE,UAAWvB,EAAQd,MAAxB,UAEI,cAACwC,EAAA,EAAD,CAAQH,UAAWvB,EAAQR,OAA3B,SACI,cAAC,IAAD,MAEJ,cAAC/B,EAAA,EAAD,CAAYkE,UAAU,KAAKjE,QAAQ,KAAnC,qBAGCoB,GAAS,eAACrB,EAAA,EAAD,CAAYkE,UAAU,QAAQC,MAAO,CAAEjE,MAAO,OAASD,QAAQ,QAA/D,UAAuE,uBAAOoB,KAExF,uBAAMyC,UAAWvB,EAAQL,KAAMkC,SAAUoE,GAAzC,UACI,cAAC9D,EAAA,EAAD,CACIzE,QAAQ,WACR+B,OAAO,SACP6C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHM,KAAK,QACLL,MAAM,gBACNJ,KAAK,QACLD,aAAa,QACbO,SAAU,SAAA3B,GAAC,OAAIT,EAASS,EAAE4B,OAAOC,QACjCH,WAAS,EACTnB,UAAWvB,EAAQoF,YAEvB,cAACjD,EAAA,EAAD,CACIzE,QAAQ,WACR+B,OAAO,SACP6C,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLI,MAAM,WACNK,KAAK,WACLN,GAAG,WACHJ,aAAa,mBACbO,SAAU,SAAA3B,GAAC,OAAIP,EAAYO,EAAE4B,OAAOC,UAExC,cAACE,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAUJ,MAAM,WAAWlF,MAAM,YAC1C8E,MAAM,gBAEV,cAACS,EAAA,EAAD,CACIJ,KAAK,SACLP,WAAS,EACT7E,QAAQ,YACRkE,MAAO,CAAClC,gBAAgB,UAAW/B,MAAM,QACzC4D,UAAWvB,EAAQH,OALvB,qBAUA,cAACiC,EAAA,EAAD,CAAMC,WAAS,EAAf,SAEI,cAACD,EAAA,EAAD,UACI,cAACjE,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAQ0F,QA3HxC,WAC3BsC,GAAQ,IA0H4B,SACI,cAACjI,EAAA,EAAD,sDAShB,cAAC6F,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,EAAD,SAIXiC,GACG,sBAAKjE,UAAWvB,EAAQd,MAAxB,UACI,cAACsC,EAAA,EAAD,IACA,qDAOZ,eAACL,EAAA,EAAD,CAAWC,SAAS,KAAKC,OAAK,EAACC,gBAAgB,EAA/C,UACI,cAAC8E,EAAA,EAAD,CACIC,kBAAgB,qBAChBC,mBAAiB,2BACjB/E,UAAWvB,EAAQ8E,WACnBf,KAAMA,EACNwC,QAASV,EACTW,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,KATjB,SAYI,cAAC,EAAD,CAAM5C,GAAID,EAAV,SACI,qBAAKxC,UAAWvB,EAAQ8E,WAAxB,SAEI,cAAC,EAAD,CAActB,mBApJf,SAAA9F,GACvBmB,QAAQqC,IAAI,2BACZ0E,GAAgB,GAChBC,KAiJ8ExC,aAAcwC,UAMhF,cAACgB,EAAA,EAAD,CAAU9C,KAAM4B,EAAcmB,iBAAkB,IAAMP,QAAST,GAA/D,SACI,cAAC,EAAD,CAAOS,QAAST,GAAqBiB,SAAS,UAA9C","file":"static/js/10.bd730335.chunk.js","sourcesContent":["import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Fragment, useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport {sendRequest} from \"./../Utils/httpRequestMaker.js\"\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"/home\">\r\n                FlightLogix\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nasync function registerUser(User) {\r\n\r\n    return sendRequest(\"POST\", \"/app/register\", null, JSON.stringify(User))\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n\r\n            /* console.log(\"Received: \" + JSON.stringify(responseJson))\r\n           let tokenReceived = responseJson['token']\r\n           console.log(\"Using token: \" + tokenReceived)\r\n           console.log(\"STATE TOKEN:\" + props.token)\r\n \r\n           if (tokenReceived){\r\n               props.setToken(tokenReceived) */\r\n\r\n            return responseJson\r\n\r\n\r\n        })\r\n\r\n        .catch(err => {\r\n            console.error(\"Failed to Register user => \" + err)\r\n        })\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: \"#F4B400\",\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastname] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const handleRegister = async e => {\r\n        e.preventDefault();\r\n        setIsRegistering(true);\r\n        setError(null);\r\n        const response = await registerUser({\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            password\r\n\r\n        });\r\n\r\n        setIsRegistering(false);\r\n\r\n        if (!response) {\r\n            console.log(\"Server unavailable\");\r\n            setError(\"Server unavailable. Try again later.\");\r\n        }\r\n        else if (response['message']) {\r\n            console.log(response['message']);\r\n            setError(response['message']);\r\n        }\r\n        //nulll out setters\r\n        else if(response === \"CREATED\") {\r\n            console.log(\"Registration successful \");                      \r\n            setIsRegistered(true)\r\n\r\n        }\r\n        else{\r\n            console.log(response)\r\n            console.log(response['title']);\r\n            setError(response['title']);\r\n        }\r\n\r\n            setEmail()\r\n            setFirstName()\r\n            setLastname()\r\n            setPassword()      \r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n       \r\n        <Fragment>\r\n            \r\n            <Container maxWidth=\"xs\" fixed disableGutters={true}>\r\n                {\r\n                    isRegistering && <div className={classes.paper}>\r\n                        <CircularProgress />\r\n                        <p>Registering User</p>\r\n\r\n                    </div>\r\n                }\r\n\r\n                {!isRegistering &&\r\n                    <div>\r\n                        <CssBaseline />\r\n                        <div className={classes.paper}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Sign up\r\n        </Typography>\r\n        {error && <Typography component=\"body2\" style={{ color: 'red' }} variant=\"body2\"><br />{error}</Typography>}\r\n\r\n                            <form className={classes.form} onSubmit={handleRegister}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            autoComplete=\"fname\"\r\n                                            name=\"firstName\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"firstName\"\r\n                                            label=\"First Name\"\r\n                                            autoFocus\r\n                                            onChange={e => setFirstName(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"lastName\"\r\n                                            label=\"Last Name\"\r\n                                            name=\"lastName\"\r\n                                            autoComplete=\"lname\"\r\n                                            onChange={e => setLastname(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            onChange={e => setEmail(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            autoComplete=\"current-password\"\r\n                                            onChange={e => setPassword(e.target.value)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FormControlLabel\r\n                                            control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                            label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    style={{backgroundColor:\"#F4B400\"}}\r\n                                >\r\n                                    Sign Up\r\n          </Button>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <Link href=\"#\" variant=\"body2\" onClick={props.closeHandler}>\r\n                                            Already have an account? Sign in\r\n              </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </div>\r\n                }\r\n\r\n                {isRegistered && props.handleIsRegistered('success')}\r\n            </Container>\r\n\r\n        </Fragment>\r\n    );\r\n}","import React, { Fragment } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs';\r\nimport Registration from '../Pages/Registration';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport {sendRequest} from \"./../Utils/httpRequestMaker.js\"\r\n\r\n\r\n\r\nasync function loginUser(Credentials) {\r\n\r\n    return sendRequest(\"POST\", \"/app/login\", null, JSON.stringify(Credentials))\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n\r\n            /* console.log(\"Received: \" + JSON.stringify(responseJson))\r\n           let tokenReceived = responseJson['token']\r\n           console.log(\"Using token: \" + tokenReceived)\r\n           console.log(\"STATE TOKEN:\" + props.token)\r\n \r\n           if (tokenReceived){\r\n               props.setToken(tokenReceived) */\r\n\r\n            return responseJson\r\n\r\n\r\n        })\r\n\r\n        .catch(err => {\r\n            console.error(\"Failed to log in user => \" + err)\r\n        })\r\n}\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: open ? 1 : 0 },\r\n        onStart: () => {\r\n            if (open && onEnter) {\r\n                onEnter();\r\n            }\r\n        },\r\n        onRest: () => {\r\n            if (!open && onExited) {\r\n                onExited();\r\n            }\r\n        },\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <animated.div ref={ref} style={style} {...other}>\r\n            {children}\r\n        </animated.div>\r\n    );\r\n});\r\n\r\nFade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n};\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                FlightLogix\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor:\"#F4B400\",\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    modalPaper: {\r\n        display: 'flex',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    textField:{\r\n        '&:focus':{\r\n            backgroundColor: 'red'\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n));\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function SignIn(props) {\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [isAuthenticating, setIsAuthenticating] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n  \r\n\r\n\r\n    const handleRegistrationOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSnackBarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n          }\r\n      \r\n          setSnackBarOpen(false);\r\n        };\r\n      \r\n        const handleIsRegistered = variant => {\r\n            console.log('in handle is registered')\r\n            setSnackBarOpen(true);\r\n            handleClose();\r\n\r\n\r\n        }\r\n\r\n\r\n        const handleSubmit = async e => {\r\n            console.log(\"Clicked login.\")\r\n            e.preventDefault();\r\n\r\n            setIsAuthenticating(true);\r\n            setError(null);\r\n            const response = await loginUser({\r\n                email,\r\n                password,\r\n                setIsAuthenticating\r\n            });\r\n\r\n            if (!response) {\r\n                console.log(\"Server unavailable\");\r\n                setError(\"Server unavailable. Try again later.\");\r\n            }\r\n            else if (response['message']) {\r\n                console.log(response['message']);\r\n                setError(response['message']);\r\n            }\r\n            else if (response['token']) {\r\n                console.log(response)\r\n                props.setToken(response.token);\r\n            }\r\n\r\n            setIsAuthenticating(false);\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n        \r\n                <Fragment>\r\n                    <Container component=\"main\" maxWidth=\"xs\">\r\n                        <CssBaseline />\r\n\r\n                        {!isAuthenticating &&\r\n                            <div className={classes.paper}>\r\n\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    Sign in\r\n        </Typography>\r\n                                {error && <Typography component=\"body2\" style={{ color: 'red' }} variant=\"body2\"><br />{error}</Typography>}\r\n\r\n                                <form className={classes.form} onSubmit={handleSubmit}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                        autoFocus                                \r\n                                        className={classes.textField}\r\n                                    />\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                        label=\"Remember me\"\r\n                                    />\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        style={{backgroundColor:\"#F4B400\", color:\"#fff\"}}\r\n                                        className={classes.submit}\r\n                                       \r\n                                    >\r\n                                        Sign In\r\n          </Button>\r\n                                    <Grid container>\r\n\r\n                                        <Grid>\r\n                                            <Link href=\"#\" variant=\"body2\" onClick={handleRegistrationOpen}>\r\n                                                <Typography>\r\n                                                    Don't have an account? Sign Up\r\n        </Typography>\r\n\r\n                                            </Link>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </form>\r\n\r\n                                <Box mt={8}>\r\n                                    <Copyright />\r\n                                </Box>\r\n                            </div>\r\n                        }\r\n                        {isAuthenticating &&\r\n                            <div className={classes.paper}>\r\n                                <CircularProgress />\r\n                                <p>Authenticating</p>\r\n\r\n                            </div>\r\n                        }\r\n\r\n                    </Container>\r\n\r\n                    <Container maxWidth=\"xs\" fixed disableGutters={true}>\r\n                        <Modal\r\n                            aria-labelledby=\"spring-modal-title\"\r\n                            aria-describedby=\"spring-modal-description\"\r\n                            className={classes.modalPaper}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            closeAfterTransition\r\n                            BackdropComponent={Backdrop}\r\n                            BackdropProps={{\r\n                                timeout: 600,\r\n                            }}\r\n                        >\r\n                            <Fade in={open}>\r\n                                <div className={classes.modalPaper}>\r\n\r\n                                    <Registration handleIsRegistered={handleIsRegistered} closeHandler={handleClose} />\r\n\r\n                                </div>\r\n                            </Fade>\r\n                        </Modal>\r\n\r\n                        <Snackbar open={snackBarOpen} autoHideDuration={5000} onClose={handleSnackBarClose}>\r\n                            <Alert onClose={handleSnackBarClose} severity=\"success\">\r\n                                User Account Created!\r\n        </Alert>\r\n                        </Snackbar>\r\n\r\n                    </Container>\r\n\r\n\r\n                </Fragment>\r\n\r\n               );\r\n    }"],"sourceRoot":""}